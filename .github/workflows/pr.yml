---
name: pr

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  # Build and test many combinations on Linux/OS X using Conan
  clang-tidy:
    container: johnmcfarlane/cnl_ci:clang-head-libcpp
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Restore caches
        uses: actions/cache@v2
        with:
          path: |
            /github/home/.conan/data
            /github/home/.ccache
            /Users/runner/Library/Caches/ccache
          key: clang-tidy-${{github.ref}}-${{github.sha}}
          restore-keys: |
            clang-tidy-${{github.ref}}-
            clang-tidy-main-
            clang-tidy-

      - name: Initialise Conan
        run: |
          conan config install $GITHUB_WORKSPACE/.github/conan/settings.yml

      - name: Install dependencies
        run: |
          conan install \
            --build=missing \
            --profile $GITHUB_WORKSPACE/.github/conan/profiles/linux-clang-head-libc++ \
            --options clang_tidy=True \
            --options int128=False \
            --options sanitize=False \
            --env CONAN_CMAKE_GENERATOR=Ninja \
            $GITHUB_WORKSPACE

      - name: Build tests
        run: conan build --build --configure $GITHUB_WORKSPACE

      - name: Test library
        run: conan build --test $GITHUB_WORKSPACE

  # Install on mature Linux distro using only CMake
  install:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure CNL
        run: cmake $GITHUB_WORKSPACE

      - name: Install CNL
        run: sudo cmake --build $GITHUB_WORKSPACE --target install

  # Test source formatting
  clang-format:
    runs-on: ubuntu-20.04
    container: johnmcfarlane/cnl_ci:clang-13
    steps:
      - uses: actions/checkout@v2

      - name: Format code
        shell: bash
        run: $GITHUB_WORKSPACE/test/scripts/clang-format

      - name: Show/test for changes
        shell: bash
        run: |
          git diff
          if [[ `git status --porcelain` ]]; then exit 1; fi

  # Test shell scripts
  shellcheck:
    runs-on: ubuntu-20.04
    container: johnmcfarlane/cnl_ci:base-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run shellcheck
        shell: bash
        run: $GITHUB_WORKSPACE/test/scripts/shellcheck

  # Test markdown
  markdownlint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run markdownlint
        shell: bash
        run: |
          sudo snap install mdl
          $GITHUB_WORKSPACE/test/scripts/markdownlint

  # Test YAML
  yamllint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run yamllint
        shell: bash
        run: |
          sudo apt install yamllint
          $GITHUB_WORKSPACE/test/scripts/yamllint

  # Test documentation generation
  doxygen:
    runs-on: ubuntu-18.04
    container: johnmcfarlane/cnl_ci:base-21.10
    steps:
      - uses: actions/checkout@v2

      - name: Test Doxyfile
        shell: bash
        run: |
          doxygen -s -u doc/Doxyfile
          rm doc/Doxyfile.bak
          git diff --exit-code

      - name: Generate documentation
        shell: bash
        run: $GITHUB_WORKSPACE/doc/generate

      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: ${{github.workspace}}/htdocs
...
